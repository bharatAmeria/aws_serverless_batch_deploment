name: Docker Build and Push to ECR

on:
  workflow_run:
    workflows: ["Training Pipeline"]
    types:
      - completed

jobs:
  docker:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    env:
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      ECR_REPO_NAME: serverless_batch_prediction
      IMAGE_TAG: latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3️⃣ Create ECR repository if it doesn't exist
      - name: Create ECR Repository
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPO_NAME || \
          aws ecr create-repository --repository-name $ECR_REPO_NAME

      # 4️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      # 5️⃣ Build Docker image
      - name: Build Docker image
        run: docker build -t $ECR_REPO_NAME:latest ./app

      # 6️⃣ Tag Docker image with ECR URI
      - name: Tag Docker image
        run: docker tag $ECR_REPO_NAME:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:latest

      # 7️⃣ Push Docker image to ECR
      - name: Push Docker image to ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:latest

      - name: Notify Docker success
        if: ${{ success() }}
        run: echo "✅ Docker image pushed to ECR successfully!"

      - name: Notify Docker failure
        if: ${{ failure() }}
        run: echo "❌ Docker push failed. Check logs."
